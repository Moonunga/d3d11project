// "Resource_Tree2.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "Resource_Tree2.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _Resource_Tree2_version_
const char Resource_Tree2_version[4] = { '0','1','9','d' };
#define _Resource_Tree2_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _Resource_Tree2_vertexcount_
const unsigned Resource_Tree2_vertexcount = 204;
#define _Resource_Tree2_vertexcount_
#endif
#ifndef _Resource_Tree2_indexcount_
const unsigned Resource_Tree2_indexcount = 1152;
#define _Resource_Tree2_indexcount_
#endif
#ifndef _Resource_Tree2_materialcount_
const unsigned Resource_Tree2_materialcount = 2; // can be used for batched draws
#define _Resource_Tree2_materialcount_
#endif
#ifndef _Resource_Tree2_meshcount_
const unsigned Resource_Tree2_meshcount = 2;
#define _Resource_Tree2_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _Resource_Tree2_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT Resource_Tree2_vertices[204] =
{
	{	{ 0.054756f, 0.803366f, -0.092007f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.596300f, 0.465000f, -0.654300f }	},
	{	{ 0.037999f, 0.730970f, -0.106465f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.661200f, 0.208800f, -0.720500f }	},
	{	{ -0.003131f, 0.730970f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.977100f, 0.212800f, -0.000000f }	},
	{	{ 0.019211f, 0.803366f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.875900f, 0.482400f, -0.000000f }	},
	{	{ 0.069480f, 0.862761f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.521800f, 0.853000f, -0.000000f }	},
	{	{ 0.088945f, 0.847363f, -0.062507f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.411200f, 0.777000f, -0.476500f }	},
	{	{ 0.054756f, 0.803366f, 0.092007f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.596300f, 0.465000f, 0.654300f }	},
	{	{ 0.088945f, 0.847363f, 0.062507f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.411200f, 0.777000f, 0.476500f }	},
	{	{ 0.037999f, 0.730970f, 0.106465f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.661200f, 0.208800f, 0.720500f }	},
	{	{ 0.161389f, 0.730970f, 0.141953f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.186100f, 0.982500f }	},
	{	{ 0.161389f, 0.803366f, 0.122676f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.440500f, 0.897700f }	},
	{	{ 0.161389f, 0.862761f, 0.079302f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.828800f, 0.559500f }	},
	{	{ 0.268022f, 0.803366f, 0.092007f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.596300f, 0.465000f, 0.654300f }	},
	{	{ 0.233832f, 0.847363f, 0.062507f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.411200f, 0.777000f, 0.476500f }	},
	{	{ 0.284778f, 0.730970f, 0.106465f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.661200f, 0.208800f, 0.720500f }	},
	{	{ 0.325908f, 0.730970f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.977100f, 0.212800f, -0.000000f }	},
	{	{ 0.303566f, 0.803366f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.875900f, 0.482400f, -0.000000f }	},
	{	{ 0.253297f, 0.862761f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.521800f, 0.853000f, -0.000000f }	},
	{	{ 0.268022f, 0.803366f, -0.092007f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.596300f, 0.465000f, -0.654300f }	},
	{	{ 0.233832f, 0.847363f, -0.062507f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.411200f, 0.777000f, -0.476500f }	},
	{	{ 0.284778f, 0.730970f, -0.106465f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.661200f, 0.208800f, -0.720500f }	},
	{	{ 0.161389f, 0.730970f, -0.141954f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.186100f, -0.982500f }	},
	{	{ 0.161389f, 0.803366f, -0.122676f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.440500f, -0.897700f }	},
	{	{ 0.161389f, 0.862761f, -0.079302f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.828800f, -0.559500f }	},
	{	{ 0.161389f, 0.633166f, 0.112165f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.892300f, 0.451300f }	},
	{	{ 0.065247f, 0.643278f, 0.082955f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.310900f, -0.876800f, 0.366900f }	},
	{	{ 0.031393f, 0.633166f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.419900f, -0.907600f, -0.000000f }	},
	{	{ 0.161389f, 0.620165f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.291384f, 0.633166f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.419900f, -0.907600f, -0.000000f }	},
	{	{ 0.257530f, 0.643278f, 0.082955f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.310900f, -0.876800f, 0.366900f }	},
	{	{ 0.161389f, 0.633166f, -0.112165f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.892300f, -0.451300f }	},
	{	{ 0.257530f, 0.643278f, -0.082955f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.310900f, -0.876800f, -0.366900f }	},
	{	{ 0.065247f, 0.643278f, -0.082955f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.310900f, -0.876800f, -0.366900f }	},
	{	{ 0.161389f, 0.882560f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.290874f, 0.672169f, -0.111725f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.643900f, -0.325200f, -0.692600f }	},
	{	{ 0.161389f, 0.672169f, -0.148966f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.333600f, -0.942700f }	},
	{	{ 0.031904f, 0.672169f, -0.111725f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.643900f, -0.325200f, -0.692600f }	},
	{	{ 0.290874f, 0.672169f, 0.111725f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.643900f, -0.325200f, 0.692600f }	},
	{	{ 0.334036f, 0.672169f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.937600f, -0.347700f, -0.000000f }	},
	{	{ 0.031904f, 0.672169f, 0.111725f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.643900f, -0.325200f, 0.692600f }	},
	{	{ 0.161389f, 0.672169f, 0.148966f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.333600f, 0.942700f }	},
	{	{ -0.011258f, 0.672169f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.937600f, -0.347700f, -0.000000f }	},
	{	{ -0.294099f, 0.664479f, -0.074639f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.553400f, 0.489200f, -0.674100f }	},
	{	{ -0.310042f, 0.605749f, -0.086368f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.624800f, 0.224000f, -0.747900f }	},
	{	{ -0.349176f, 0.605749f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.969400f, 0.245500f, -0.000000f }	},
	{	{ -0.327918f, 0.664479f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.848000f, 0.530000f, -0.000000f }	},
	{	{ -0.280089f, 0.712662f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.479500f, 0.877500f, -0.000000f }	},
	{	{ -0.261568f, 0.700170f, -0.050708f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.358300f, 0.794500f, -0.490200f }	},
	{	{ -0.294099f, 0.664479f, 0.074639f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.553400f, 0.489200f, 0.674100f }	},
	{	{ -0.261568f, 0.700170f, 0.050707f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.358300f, 0.794500f, 0.490200f }	},
	{	{ -0.310042f, 0.605749f, 0.086368f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.624800f, 0.224000f, 0.747900f }	},
	{	{ -0.192640f, 0.605749f, 0.115157f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.186400f, 0.982500f }	},
	{	{ -0.192640f, 0.664479f, 0.099519f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.442500f, 0.896800f }	},
	{	{ -0.192640f, 0.712662f, 0.064332f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.829800f, 0.558000f }	},
	{	{ -0.091181f, 0.664479f, 0.074639f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.553400f, 0.489200f, 0.674100f }	},
	{	{ -0.123711f, 0.700170f, 0.050707f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.358300f, 0.794500f, 0.490200f }	},
	{	{ -0.075237f, 0.605749f, 0.086368f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.624800f, 0.224000f, 0.747900f }	},
	{	{ -0.036103f, 0.605749f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.969400f, 0.245500f, -0.000000f }	},
	{	{ -0.057361f, 0.664479f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.848000f, 0.530000f, -0.000000f }	},
	{	{ -0.105191f, 0.712662f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.479500f, 0.877500f, -0.000000f }	},
	{	{ -0.091181f, 0.664479f, -0.074639f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.553400f, 0.489200f, -0.674100f }	},
	{	{ -0.123711f, 0.700170f, -0.050708f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.358300f, 0.794500f, -0.490200f }	},
	{	{ -0.075237f, 0.605749f, -0.086368f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.624800f, 0.224000f, -0.747900f }	},
	{	{ -0.192640f, 0.605749f, -0.115157f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.186400f, -0.982500f }	},
	{	{ -0.192640f, 0.664479f, -0.099519f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.442500f, -0.896800f }	},
	{	{ -0.192640f, 0.712662f, -0.064333f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.829800f, -0.558000f }	},
	{	{ -0.192640f, 0.526408f, 0.090991f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.894700f, 0.446700f }	},
	{	{ -0.284116f, 0.534611f, 0.067295f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.265700f, -0.887300f, 0.377000f }	},
	{	{ -0.316327f, 0.526408f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.381800f, -0.924200f, -0.000000f }	},
	{	{ -0.192640f, 0.515861f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.068952f, 0.526408f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.381800f, -0.924200f, -0.000000f }	},
	{	{ -0.101163f, 0.534611f, 0.067295f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.265700f, -0.887300f, 0.377000f }	},
	{	{ -0.192640f, 0.526408f, -0.090992f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.894700f, -0.446700f }	},
	{	{ -0.101163f, 0.534611f, -0.067295f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.265700f, -0.887300f, -0.377000f }	},
	{	{ -0.284116f, 0.534611f, -0.067295f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.265700f, -0.887300f, -0.377000f }	},
	{	{ -0.192640f, 0.728723f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.069437f, 0.558048f, -0.090635f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.613500f, -0.336200f, -0.714500f }	},
	{	{ -0.192640f, 0.558048f, -0.120846f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.336700f, -0.941600f }	},
	{	{ -0.315842f, 0.558048f, -0.090635f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.613500f, -0.336200f, -0.714500f }	},
	{	{ -0.069437f, 0.558048f, 0.090634f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.613500f, -0.336200f, 0.714500f }	},
	{	{ -0.028370f, 0.558048f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.932200f, -0.362000f, -0.000000f }	},
	{	{ -0.315842f, 0.558048f, 0.090634f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.613500f, -0.336200f, 0.714500f }	},
	{	{ -0.192640f, 0.558048f, 0.120846f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.336700f, 0.941600f }	},
	{	{ -0.356909f, 0.558048f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.932200f, -0.362000f, -0.000000f }	},
	{	{ -0.000047f, 0.002742f, 0.026733f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.009200f, -0.640900f, 0.767600f }	},
	{	{ -0.010771f, 0.156928f, 0.025730f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.005300f, 0.002800f, 1.000000f }	},
	{	{ -0.025906f, 0.157029f, 0.020831f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.591100f, -0.018100f, 0.806400f }	},
	{	{ -0.015779f, 0.002816f, 0.021653f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.438100f, -0.655100f, 0.615600f }	},
	{	{ 0.025334f, 0.002623f, -0.008247f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.748400f, -0.618200f, -0.240100f }	},
	{	{ 0.013675f, 0.156759f, -0.007943f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.949800f, 0.037700f, -0.310400f }	},
	{	{ 0.013675f, 0.156759f, 0.007943f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.949800f, 0.037700f, 0.310400f }	},
	{	{ 0.025334f, 0.002623f, 0.008247f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.748400f, -0.618200f, 0.240100f }	},
	{	{ 0.015649f, 0.002668f, -0.021604f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.464000f, -0.626800f, -0.625900f }	},
	{	{ 0.004343f, 0.156824f, -0.020802f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.584000f, 0.024200f, -0.811300f }	},
	{	{ -0.000047f, 0.002742f, -0.026733f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.009200f, -0.640900f, -0.767600f }	},
	{	{ -0.010771f, 0.156928f, -0.025730f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.005300f, 0.002800f, -1.000000f }	},
	{	{ -0.015779f, 0.002816f, -0.021653f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.438100f, -0.655100f, -0.615600f }	},
	{	{ -0.025906f, 0.157029f, -0.020830f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.591100f, -0.018100f, -0.806400f }	},
	{	{ -0.025522f, 0.002862f, -0.008277f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.710300f, -0.663900f, -0.233700f }	},
	{	{ -0.035271f, 0.157090f, -0.007960f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.951100f, -0.030700f, -0.307300f }	},
	{	{ -0.025522f, 0.002862f, 0.008277f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.710300f, -0.663900f, 0.233700f }	},
	{	{ -0.035271f, 0.157090f, 0.007960f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.951100f, -0.030700f, 0.307300f }	},
	{	{ 0.015649f, 0.002668f, 0.021604f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.464000f, -0.626800f, 0.625900f }	},
	{	{ 0.004343f, 0.156824f, 0.020802f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.584000f, 0.024200f, 0.811300f }	},
	{	{ -0.011315f, 0.370202f, 0.025730f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.031000f, 0.010600f, 0.999500f }	},
	{	{ -0.026449f, 0.370115f, 0.020830f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.602400f, 0.100700f, 0.791800f }	},
	{	{ -0.035814f, 0.370063f, 0.007960f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.942700f, 0.148900f, 0.298300f }	},
	{	{ -0.035814f, 0.370063f, -0.007960f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.942700f, 0.148900f, -0.298300f }	},
	{	{ -0.026449f, 0.370115f, -0.020830f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.602400f, 0.100700f, -0.791800f }	},
	{	{ -0.011315f, 0.370202f, -0.025730f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.031000f, 0.010600f, -0.999500f }	},
	{	{ 0.003799f, 0.370291f, -0.020802f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.562900f, -0.092300f, -0.821300f }	},
	{	{ 0.013131f, 0.370347f, -0.007943f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.935500f, -0.159300f, -0.315200f }	},
	{	{ 0.013131f, 0.370347f, 0.007943f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.935500f, -0.159300f, 0.315200f }	},
	{	{ 0.003799f, 0.370291f, 0.020802f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.562900f, -0.092300f, 0.821300f }	},
	{	{ 0.134010f, 0.704679f, -0.005347f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.485500f, 0.845600f, -0.222000f }	},
	{	{ 0.140132f, 0.703236f, -0.013992f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.239400f, 0.772700f, -0.587800f }	},
	{	{ 0.101245f, 0.608661f, -0.020830f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.492200f, 0.314700f, -0.811600f }	},
	{	{ 0.092130f, 0.610810f, -0.007960f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.810500f, 0.499200f, -0.306400f }	},
	{	{ 0.150028f, 0.700905f, 0.017283f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.171100f, 0.651700f, 0.738900f }	},
	{	{ 0.140132f, 0.703236f, 0.013992f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.239400f, 0.772700f, 0.587800f }	},
	{	{ 0.101245f, 0.608661f, 0.020830f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.492200f, 0.314700f, 0.811600f }	},
	{	{ 0.115977f, 0.605192f, 0.025730f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.036700f, 0.015700f, 0.999200f }	},
	{	{ 0.166013f, 0.697143f, -0.005335f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.862000f, 0.449800f, -0.233500f }	},
	{	{ 0.166013f, 0.697143f, 0.005335f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.862000f, 0.449800f, 0.233500f }	},
	{	{ 0.139773f, 0.599592f, 0.007943f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.860700f, -0.413400f, 0.297300f }	},
	{	{ 0.139773f, 0.599592f, -0.007943f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.860700f, -0.413400f, -0.297300f }	},
	{	{ 0.036232f, 0.437870f, -0.007943f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.874800f, -0.378200f, -0.302800f }	},
	{	{ 0.036232f, 0.437870f, 0.007943f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.874800f, -0.378200f, 0.302800f }	},
	{	{ 0.159911f, 0.698579f, 0.013973f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.594700f, 0.527700f, 0.606500f }	},
	{	{ 0.130689f, 0.601729f, 0.020802f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.553500f, -0.259400f, 0.791400f }	},
	{	{ 0.134010f, 0.704679f, 0.005347f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.485500f, 0.845600f, 0.222000f }	},
	{	{ 0.092130f, 0.610810f, 0.007960f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.810500f, 0.499200f, 0.306400f }	},
	{	{ 0.028360f, 0.442274f, 0.020802f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.542900f, -0.236300f, 0.805800f }	},
	{	{ 0.015557f, 0.449407f, 0.025730f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.015300f, 0.005200f, 0.999800f }	},
	{	{ 0.002694f, 0.456576f, 0.020830f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.560600f, 0.245300f, 0.790900f }	},
	{	{ -0.005279f, 0.461038f, 0.007960f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.874200f, 0.386000f, 0.294400f }	},
	{	{ -0.005279f, 0.461038f, -0.007960f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.874200f, 0.386000f, -0.294400f }	},
	{	{ 0.002694f, 0.456576f, -0.020830f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.560600f, 0.245300f, -0.790900f }	},
	{	{ 0.050020f, 0.542960f, -0.020830f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.515200f, 0.340100f, -0.786700f }	},
	{	{ 0.042393f, 0.547153f, -0.007960f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.798800f, 0.526800f, -0.290500f }	},
	{	{ 0.015557f, 0.449407f, -0.025730f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.015300f, 0.005200f, -0.999800f }	},
	{	{ 0.115977f, 0.605192f, -0.025730f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.036700f, 0.015700f, -0.999200f }	},
	{	{ 0.130689f, 0.601729f, -0.020802f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.553500f, -0.259400f, -0.791400f }	},
	{	{ 0.074825f, 0.529167f, -0.020802f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.500800f, -0.323600f, -0.802800f }	},
	{	{ 0.062388f, 0.536083f, -0.025730f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.012900f, 0.010700f, -0.999800f }	},
	{	{ 0.082552f, 0.524890f, 0.007943f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.801600f, -0.517200f, 0.299900f }	},
	{	{ 0.082552f, 0.524890f, -0.007943f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.801600f, -0.517200f, -0.299900f }	},
	{	{ 0.042393f, 0.547153f, 0.007960f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.798800f, 0.526800f, 0.290500f }	},
	{	{ 0.150028f, 0.700905f, -0.017284f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.171100f, 0.651700f, -0.738900f }	},
	{	{ 0.159911f, 0.698579f, -0.013973f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.594700f, 0.527700f, -0.606500f }	},
	{	{ 0.050020f, 0.542960f, 0.020830f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.515200f, 0.340100f, 0.786700f }	},
	{	{ 0.062388f, 0.536083f, 0.025730f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.012900f, 0.010700f, 0.999800f }	},
	{	{ 0.028360f, 0.442274f, -0.020802f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.542900f, -0.236300f, -0.805800f }	},
	{	{ 0.074825f, 0.529167f, 0.020802f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.500800f, -0.323600f, 0.802800f }	},
	{	{ -0.148253f, 0.553068f, -0.015755f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.433900f, 0.391600f, -0.811400f }	},
	{	{ -0.189652f, 0.618398f, -0.010583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.101500f, 0.802500f, -0.587800f }	},
	{	{ -0.185281f, 0.620278f, -0.004044f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.331100f, 0.917100f, -0.222000f }	},
	{	{ -0.141746f, 0.555866f, -0.006021f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.717600f, 0.625300f, -0.306600f }	},
	{	{ -0.148253f, 0.553068f, 0.015755f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.433900f, 0.391600f, 0.811400f }	},
	{	{ -0.189652f, 0.618398f, 0.010583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.101500f, 0.802500f, 0.587800f }	},
	{	{ -0.196716f, 0.615361f, 0.013072f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.281800f, 0.612000f, 0.738900f }	},
	{	{ -0.158770f, 0.548547f, 0.019461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.037900f, 0.011300f, 0.999200f }	},
	{	{ -0.175757f, 0.541247f, 0.006007f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.780200f, -0.549900f, 0.297900f }	},
	{	{ -0.208127f, 0.610458f, 0.004035f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.927100f, 0.293100f, 0.233500f }	},
	{	{ -0.208127f, 0.610458f, -0.004035f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.927100f, 0.293100f, -0.233400f }	},
	{	{ -0.175757f, 0.541247f, -0.006007f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.780200f, -0.549900f, -0.297900f }	},
	{	{ -0.003223f, 0.405008f, 0.006546f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.530000f, -0.796900f, 0.289800f }	},
	{	{ -0.066097f, 0.446644f, 0.006007f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.559600f, -0.773500f, 0.297600f }	},
	{	{ -0.066097f, 0.446644f, -0.006007f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.559600f, -0.773500f, -0.297600f }	},
	{	{ -0.003223f, 0.405008f, -0.006546f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.530000f, -0.796900f, -0.289800f }	},
	{	{ -0.169273f, 0.544033f, 0.015734f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.502400f, -0.345800f, 0.792500f }	},
	{	{ -0.203771f, 0.612329f, 0.010569f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.677400f, 0.416200f, 0.606500f }	},
	{	{ -0.141746f, 0.555866f, 0.006021f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.717600f, 0.625300f, 0.306600f }	},
	{	{ -0.185281f, 0.620278f, 0.004044f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.331100f, 0.917100f, 0.222000f }	},
	{	{ 0.003846f, 0.423873f, 0.021204f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.044500f, -0.023500f, 0.998700f }	},
	{	{ -0.055317f, 0.460943f, 0.019461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.017500f, -0.003000f, 0.999800f }	},
	{	{ -0.061996f, 0.452096f, 0.015734f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.358700f, -0.489400f, 0.794900f }	},
	{	{ -0.000524f, 0.412209f, 0.017143f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.352800f, -0.515600f, 0.780800f }	},
	{	{ -0.044454f, 0.475356f, 0.006021f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.529500f, 0.791800f, 0.304400f }	},
	{	{ -0.048607f, 0.469833f, 0.015755f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.325700f, 0.493100f, 0.806600f }	},
	{	{ 0.008220f, 0.435554f, 0.017167f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.278600f, 0.495500f, 0.822700f }	},
	{	{ 0.010925f, 0.442782f, 0.006560f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.479200f, 0.819100f, 0.315200f }	},
	{	{ 0.008220f, 0.435554f, -0.017167f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.278600f, 0.495500f, -0.822700f }	},
	{	{ -0.048607f, 0.469833f, -0.015755f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.325700f, 0.493100f, -0.806600f }	},
	{	{ -0.044454f, 0.475356f, -0.006021f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.529500f, 0.791800f, -0.304400f }	},
	{	{ 0.010925f, 0.442782f, -0.006560f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.479200f, 0.819100f, -0.315200f }	},
	{	{ -0.107742f, 0.515145f, -0.015755f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.388200f, 0.458100f, -0.799600f }	},
	{	{ -0.103746f, 0.520376f, -0.006021f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.616100f, 0.729300f, -0.297500f }	},
	{	{ 0.003846f, 0.423873f, -0.021204f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.044500f, -0.023500f, -0.998700f }	},
	{	{ -0.055317f, 0.460943f, -0.019461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.017500f, -0.003000f, -0.999800f }	},
	{	{ -0.120692f, 0.498024f, -0.015734f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.400000f, -0.463600f, -0.790600f }	},
	{	{ -0.169273f, 0.544033f, -0.015734f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.502400f, -0.345800f, -0.792500f }	},
	{	{ -0.158770f, 0.548547f, -0.019461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.037900f, 0.011300f, -0.999200f }	},
	{	{ -0.114199f, 0.506609f, -0.019461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.007900f, -0.007300f, -0.999900f }	},
	{	{ -0.124731f, 0.492705f, 0.006007f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.624800f, -0.723500f, 0.293400f }	},
	{	{ -0.124731f, 0.492705f, -0.006007f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.624800f, -0.723500f, -0.293400f }	},
	{	{ -0.103746f, 0.520376f, 0.006021f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.616100f, 0.729300f, 0.297500f }	},
	{	{ -0.196716f, 0.615361f, -0.013073f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.281800f, 0.612000f, -0.738900f }	},
	{	{ -0.203771f, 0.612329f, -0.010569f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.677400f, 0.416200f, -0.606500f }	},
	{	{ -0.107742f, 0.515145f, 0.015755f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.388200f, 0.458100f, 0.799600f }	},
	{	{ -0.114199f, 0.506609f, 0.019461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.007900f, -0.007300f, 0.999900f }	},
	{	{ -0.061996f, 0.452096f, -0.015734f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.358700f, -0.489400f, -0.794900f }	},
	{	{ -0.000524f, 0.412209f, -0.017143f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.352800f, -0.515600f, -0.780800f }	},
	{	{ -0.120692f, 0.498024f, 0.015734f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.400000f, -0.463600f, 0.790600f }	},
};
#define _Resource_Tree2_vertices_
#endif
#ifndef _Resource_Tree2_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int Resource_Tree2_indices[1152] =
{
	 0, 1, 2,
	 3, 0, 2,
	 4, 5, 0,
	 3, 4, 0,
	 6, 7, 4,
	 3, 6, 4,
	 2, 8, 6,
	 3, 2, 6,
	 6, 8, 9,
	 10, 6, 9,
	 11, 7, 6,
	 10, 11, 6,
	 12, 13, 11,
	 10, 12, 11,
	 9, 14, 12,
	 10, 9, 12,
	 12, 14, 15,
	 16, 12, 15,
	 17, 13, 12,
	 16, 17, 12,
	 18, 19, 17,
	 16, 18, 17,
	 15, 20, 18,
	 16, 15, 18,
	 18, 20, 21,
	 22, 18, 21,
	 23, 19, 18,
	 22, 23, 18,
	 0, 5, 23,
	 22, 0, 23,
	 21, 1, 0,
	 22, 21, 0,
	 24, 25, 26,
	 27, 24, 26,
	 28, 29, 24,
	 27, 28, 24,
	 30, 31, 28,
	 27, 30, 28,
	 26, 32, 30,
	 27, 26, 30,
	 11, 13, 17,
	 33, 11, 17,
	 4, 7, 11,
	 33, 4, 11,
	 23, 5, 4,
	 33, 23, 4,
	 17, 19, 23,
	 33, 17, 23,
	 34, 31, 30,
	 35, 34, 30,
	 21, 20, 34,
	 35, 21, 34,
	 36, 1, 21,
	 35, 36, 21,
	 30, 32, 36,
	 35, 30, 36,
	 37, 29, 28,
	 38, 37, 28,
	 15, 14, 37,
	 38, 15, 37,
	 34, 20, 15,
	 38, 34, 15,
	 28, 31, 34,
	 38, 28, 34,
	 39, 25, 24,
	 40, 39, 24,
	 9, 8, 39,
	 40, 9, 39,
	 37, 14, 9,
	 40, 37, 9,
	 24, 29, 37,
	 40, 24, 37,
	 36, 32, 26,
	 41, 36, 26,
	 2, 1, 36,
	 41, 2, 36,
	 39, 8, 2,
	 41, 39, 2,
	 26, 25, 39,
	 41, 26, 39,
	 42, 43, 44,
	 45, 42, 44,
	 46, 47, 42,
	 45, 46, 42,
	 48, 49, 46,
	 45, 48, 46,
	 44, 50, 48,
	 45, 44, 48,
	 48, 50, 51,
	 52, 48, 51,
	 53, 49, 48,
	 52, 53, 48,
	 54, 55, 53,
	 52, 54, 53,
	 51, 56, 54,
	 52, 51, 54,
	 54, 56, 57,
	 58, 54, 57,
	 59, 55, 54,
	 58, 59, 54,
	 60, 61, 59,
	 58, 60, 59,
	 57, 62, 60,
	 58, 57, 60,
	 60, 62, 63,
	 64, 60, 63,
	 65, 61, 60,
	 64, 65, 60,
	 42, 47, 65,
	 64, 42, 65,
	 63, 43, 42,
	 64, 63, 42,
	 66, 67, 68,
	 69, 66, 68,
	 70, 71, 66,
	 69, 70, 66,
	 72, 73, 70,
	 69, 72, 70,
	 68, 74, 72,
	 69, 68, 72,
	 53, 55, 59,
	 75, 53, 59,
	 46, 49, 53,
	 75, 46, 53,
	 65, 47, 46,
	 75, 65, 46,
	 59, 61, 65,
	 75, 59, 65,
	 76, 73, 72,
	 77, 76, 72,
	 63, 62, 76,
	 77, 63, 76,
	 78, 43, 63,
	 77, 78, 63,
	 72, 74, 78,
	 77, 72, 78,
	 79, 71, 70,
	 80, 79, 70,
	 57, 56, 79,
	 80, 57, 79,
	 76, 62, 57,
	 80, 76, 57,
	 70, 73, 76,
	 80, 70, 76,
	 81, 67, 66,
	 82, 81, 66,
	 51, 50, 81,
	 82, 51, 81,
	 79, 56, 51,
	 82, 79, 51,
	 66, 71, 79,
	 82, 66, 79,
	 78, 74, 68,
	 83, 78, 68,
	 44, 43, 78,
	 83, 44, 78,
	 81, 50, 44,
	 83, 81, 44,
	 68, 67, 81,
	 83, 68, 81,
	 84, 85, 86,
	 87, 84, 86,
	 88, 89, 90,
	 91, 88, 90,
	 92, 93, 89,
	 88, 92, 89,
	 94, 95, 93,
	 92, 94, 93,
	 96, 97, 95,
	 94, 96, 95,
	 98, 99, 97,
	 96, 98, 97,
	 100, 101, 99,
	 98, 100, 99,
	 87, 86, 101,
	 100, 87, 101,
	 102, 103, 85,
	 84, 102, 85,
	 87, 100, 98,
	 84, 87, 98,
	 102, 84, 98,
	 91, 102, 98,
	 88, 91, 98,
	 92, 88, 98,
	 94, 92, 98,
	 96, 94, 98,
	 91, 90, 103,
	 102, 91, 103,
	 86, 85, 104,
	 105, 86, 104,
	 101, 86, 105,
	 106, 101, 105,
	 99, 101, 106,
	 107, 99, 106,
	 97, 99, 107,
	 108, 97, 107,
	 95, 97, 108,
	 109, 95, 108,
	 93, 95, 109,
	 110, 93, 109,
	 89, 93, 110,
	 111, 89, 110,
	 90, 89, 111,
	 112, 90, 111,
	 103, 90, 112,
	 113, 103, 112,
	 85, 103, 113,
	 104, 85, 113,
	 114, 115, 116,
	 117, 114, 116,
	 118, 119, 120,
	 121, 118, 120,
	 122, 123, 124,
	 125, 122, 124,
	 126, 127, 112,
	 111, 126, 112,
	 123, 128, 129,
	 124, 123, 129,
	 119, 130, 131,
	 120, 119, 131,
	 132, 133, 104,
	 113, 132, 104,
	 134, 135, 106,
	 105, 134, 106,
	 136, 137, 108,
	 107, 136, 108,
	 117, 116, 138,
	 139, 117, 138,
	 137, 140, 109,
	 108, 137, 109,
	 141, 142, 143,
	 144, 141, 143,
	 125, 124, 145,
	 146, 125, 145,
	 131, 117, 139,
	 147, 131, 139,
	 115, 148, 141,
	 116, 115, 141,
	 127, 132, 113,
	 112, 127, 113,
	 148, 149, 142,
	 141, 148, 142,
	 121, 120, 150,
	 151, 121, 150,
	 152, 126, 111,
	 110, 152, 111,
	 124, 129, 153,
	 145, 124, 153,
	 119, 118, 128,
	 130, 119, 128,
	 114, 130, 128,
	 115, 114, 128,
	 148, 115, 128,
	 149, 148, 128,
	 122, 149, 128,
	 123, 122, 128,
	 149, 122, 125,
	 142, 149, 125,
	 128, 118, 121,
	 129, 128, 121,
	 116, 141, 144,
	 138, 116, 144,
	 135, 136, 107,
	 106, 135, 107,
	 140, 152, 110,
	 109, 140, 110,
	 142, 125, 146,
	 143, 142, 146,
	 130, 114, 117,
	 131, 130, 117,
	 120, 131, 147,
	 150, 120, 147,
	 129, 121, 151,
	 153, 129, 151,
	 126, 152, 143,
	 146, 126, 143,
	 132, 127, 145,
	 153, 132, 145,
	 134, 133, 151,
	 150, 134, 151,
	 136, 135, 147,
	 139, 136, 147,
	 152, 140, 144,
	 143, 152, 144,
	 140, 137, 138,
	 144, 140, 138,
	 135, 134, 150,
	 147, 135, 150,
	 133, 132, 153,
	 151, 133, 153,
	 137, 136, 139,
	 138, 137, 139,
	 127, 126, 146,
	 145, 127, 146,
	 133, 134, 105,
	 104, 133, 105,
	 154, 155, 156,
	 157, 154, 156,
	 158, 159, 160,
	 161, 158, 160,
	 162, 163, 164,
	 165, 162, 164,
	 166, 167, 168,
	 169, 166, 168,
	 170, 171, 163,
	 162, 170, 163,
	 172, 173, 159,
	 158, 172, 159,
	 174, 175, 176,
	 177, 174, 176,
	 178, 179, 180,
	 181, 178, 180,
	 182, 183, 184,
	 185, 182, 184,
	 186, 154, 157,
	 187, 186, 157,
	 188, 189, 183,
	 182, 188, 183,
	 190, 191, 192,
	 193, 190, 192,
	 194, 162, 165,
	 195, 194, 165,
	 187, 157, 172,
	 196, 187, 172,
	 192, 197, 155,
	 154, 192, 155,
	 176, 167, 166,
	 177, 176, 166,
	 191, 198, 197,
	 192, 191, 197,
	 199, 158, 161,
	 200, 199, 161,
	 169, 168, 201,
	 202, 169, 201,
	 203, 170, 162,
	 194, 203, 162,
	 156, 155, 197,
	 173, 156, 197,
	 159, 173, 197,
	 160, 159, 197,
	 171, 160, 197,
	 163, 171, 197,
	 164, 163, 197,
	 198, 164, 197,
	 165, 164, 198,
	 191, 165, 198,
	 161, 160, 171,
	 170, 161, 171,
	 193, 192, 154,
	 186, 193, 154,
	 185, 184, 178,
	 181, 185, 178,
	 202, 201, 189,
	 188, 202, 189,
	 195, 165, 191,
	 190, 195, 191,
	 157, 156, 173,
	 172, 157, 173,
	 172, 158, 199,
	 196, 172, 199,
	 200, 161, 170,
	 203, 200, 170,
	 190, 201, 168,
	 195, 190, 168,
	 194, 167, 176,
	 203, 194, 176,
	 200, 175, 179,
	 199, 200, 179,
	 196, 178, 184,
	 187, 196, 184,
	 193, 189, 201,
	 190, 193, 201,
	 186, 183, 189,
	 193, 186, 189,
	 199, 179, 178,
	 196, 199, 178,
	 203, 176, 175,
	 200, 203, 175,
	 187, 184, 183,
	 186, 187, 183,
	 195, 168, 167,
	 194, 195, 167,
	 180, 179, 175,
	 174, 180, 175,
};
#define _Resource_Tree2_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _Resource_Tree2_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL Resource_Tree2_materials[2] =
{
	{
		{{ 0.094049f, 0.178856f, 0.012008f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		225.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Green",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
	{
		{{ 0.246187f, 0.144359f, 0.053798f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		225.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Wood",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _Resource_Tree2_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _Resource_Tree2_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int Resource_Tree2_batches[2][2] =
{
	{ 480, 0 },
	{ 672, 480 },
};
#define _Resource_Tree2_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _Resource_Tree2_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH Resource_Tree2_meshes[2] =
{
	{
		"default",
		480,
		0,
		0,
	},
	{
		"default",
		672,
		480,
		1,
	},
};
#define _Resource_Tree2_meshes_
#endif
